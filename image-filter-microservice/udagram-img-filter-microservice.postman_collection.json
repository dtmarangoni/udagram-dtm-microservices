{
	"info": {
		"_postman_id": "d1226cff-7b95-489d-b3d9-a62d013b0aa3",
		"name": "udagram-img-filter-microservice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/api/v0/auth/access-token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"The response contains the access token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).haveOwnProperty('access_token') && \r",
							"    pm.expect(jsonData.access_token).to.not.be.null &&\r",
							"    pm.expect(jsonData.access_token).to.not.be.undefined;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJyZXN0YXBpLWRldiIsImlhdCI6MTUxNjIzOTAyMiwiZXhwIjoxOTE2MjM5MDIyfQ.Vn0qP73XqpycNgMAfTO49uzfqUxcElnfavIdQUY6c6I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/auth/access-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"auth",
						"access-token"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/auth/access-token - no authorization headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - missing Authorization headers\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal('No authorization headers.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/auth/access-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"auth",
						"access-token"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/auth/access-token - malformed cliend id token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - malformed client id token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal('Malformed token.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJ1ZGFncmFtZHRtZGV2LXJlc3RhcCJ9.eHd-EWk4B47bugQKapf9wWyA_zGf93oX6Y7trUAE71I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/auth/access-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"auth",
						"access-token"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/auth/access-token - invalid cliend id token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - invalid client id token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal(\"Couldn't validate the client JWT or the token is invalid.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJ1ZGFncmFtZHRtZGV2LXJlc3RhcCJ9.eHd-EWk4B47bugQKapf9wWyA_zGf93oX6Y7trUAE71I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/auth/access-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"auth",
						"access-token"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/auth/access-token - invalid client id inside token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - invalid client id inside token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal('No access is granted.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJhcGktZGV2IiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE5MTYyMzkwMjJ9.TO5Nsh2yyOntsUVs2mTutiT4abe2XSaCGjtU663ZEv8",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/auth/access-token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"auth",
						"access-token"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Headers has Content-Type set to image MIME type\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"image/jpeg\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJyZXN0YXBpLWRldiIsImlhdCI6MTYxMTQ0MzQwMiwiZXhwIjoxNjE2NjI3NDAyfQ.DkhtKLvpkr6fD7sbXygJh3cy0qYISLrujMr1S5_Dtmg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage?image_url=https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					],
					"query": [
						{
							"key": "image_url",
							"value": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
						}
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}} - missing img url query param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - invalid img url path\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.include('Missing public image URL to be filtered!');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJyZXN0YXBpLWRldiIsImlhdCI6MTYxMTQ0MzQwMiwiZXhwIjoxNjE2NjI3NDAyfQ.DkhtKLvpkr6fD7sbXygJh3cy0qYISLrujMr1S5_Dtmg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}} - invalid img url path",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - invalid img url path\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.include('Error while filtering the image');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJyZXN0YXBpLWRldiIsImlhdCI6MTYxMTQ0MzQwMiwiZXhwIjoxNjE2NjI3NDAyfQ.DkhtKLvpkr6fD7sbXygJh3cy0qYISLrujMr1S5_Dtmg",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage?image_url=https://upload.wikidia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					],
					"query": [
						{
							"key": "image_url",
							"value": "https://upload.wikidia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
						}
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}} - no authorization headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - missing Authorization headers\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal('No authorization headers.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage?image_url=https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					],
					"query": [
						{
							"key": "image_url",
							"value": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
						}
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}} - malformed cliend id token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - malformed client id token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal('Malformed token.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJ1ZGFncmFtZHRtZGV2LXJlc3RhcCJ9.eHd-EWk4B47bugQKapf9wWyA_zGf93oX6Y7trUAE71I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage?image_url=https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					],
					"query": [
						{
							"key": "image_url",
							"value": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
						}
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		},
		{
			"name": "/api/v0/filteredimage?image_url={{}} - invalid access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response - invalid access token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.not.be.null && \r",
							"    pm.expect(jsonData.error.message).to.equal(\"Couldn't validate the access JWT or the token is invalid.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfaWQiOiJ1ZGFncmFtZHRtZGV2LXJlc3RhcCJ9.eHd-EWk4B47bugQKapf9wWyA_zGf93oX6Y7trUAE71I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v0/filteredimage?image_url=https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v0",
						"filteredimage"
					],
					"query": [
						{
							"key": "image_url",
							"value": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
						}
					]
				},
				"description": "Client server should send the cliend id token in order to retrieve an auth access token."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8084"
		}
	]
}